/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.openfeed.collectone.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.openfeed.collectone.model.Account;
import com.openfeed.collectone.model.AccountModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Account service. Represents a row in the &quot;collectone_Account&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.openfeed.collectone.model.AccountModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccountImpl}.
 * </p>
 *
 * @author sy
 * @see AccountImpl
 * @see com.openfeed.collectone.model.Account
 * @see com.openfeed.collectone.model.AccountModel
 * @generated
 */
public class AccountModelImpl extends BaseModelImpl<Account>
	implements AccountModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a account model instance should use the {@link com.openfeed.collectone.model.Account} interface instead.
	 */
	public static final String TABLE_NAME = "collectone_Account";
	public static final Object[][] TABLE_COLUMNS = {
			{ "account_id", Types.INTEGER },
			{ "company_Id", Types.INTEGER },
			{ "name", Types.VARCHAR },
			{ "first_name", Types.VARCHAR },
			{ "last_name", Types.VARCHAR },
			{ "date_", Types.TIMESTAMP },
			{ "active_", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table collectone_Account (account_id INTEGER not null primary key,company_Id INTEGER,name VARCHAR(75) null,first_name VARCHAR(75) null,last_name VARCHAR(75) null,date_ DATE null,active_ BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table collectone_Account";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.openfeed.collectone.model.Account"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.openfeed.collectone.model.Account"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.openfeed.collectone.model.Account"),
			true);
	public static long COMPANY_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.openfeed.collectone.model.Account"));

	public AccountModelImpl() {
	}

	public int getPrimaryKey() {
		return _account_id;
	}

	public void setPrimaryKey(int primaryKey) {
		setAccount_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_account_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return Account.class;
	}

	public String getModelClassName() {
		return Account.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("account_id", getAccount_id());
		attributes.put("company_Id", getCompany_Id());
		attributes.put("name", getName());
		attributes.put("first_name", getFirst_name());
		attributes.put("last_name", getLast_name());
		attributes.put("date", getDate());
		attributes.put("active", getActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer account_id = (Integer)attributes.get("account_id");

		if (account_id != null) {
			setAccount_id(account_id);
		}

		Integer company_Id = (Integer)attributes.get("company_Id");

		if (company_Id != null) {
			setCompany_Id(company_Id);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String first_name = (String)attributes.get("first_name");

		if (first_name != null) {
			setFirst_name(first_name);
		}

		String last_name = (String)attributes.get("last_name");

		if (last_name != null) {
			setLast_name(last_name);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}
	}

	public int getAccount_id() {
		return _account_id;
	}

	public void setAccount_id(int account_id) {
		_account_id = account_id;
	}

	public int getCompany_Id() {
		return _company_Id;
	}

	public void setCompany_Id(int company_Id) {
		_columnBitmask |= COMPANY_ID_COLUMN_BITMASK;

		if (!_setOriginalCompany_Id) {
			_setOriginalCompany_Id = true;

			_originalCompany_Id = _company_Id;
		}

		_company_Id = company_Id;
	}

	public int getOriginalCompany_Id() {
		return _originalCompany_Id;
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getFirst_name() {
		if (_first_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _first_name;
		}
	}

	public void setFirst_name(String first_name) {
		_first_name = first_name;
	}

	public String getLast_name() {
		if (_last_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _last_name;
		}
	}

	public void setLast_name(String last_name) {
		_last_name = last_name;
	}

	public Date getDate() {
		return _date;
	}

	public void setDate(Date date) {
		_date = date;
	}

	public boolean getActive() {
		return _active;
	}

	public boolean isActive() {
		return _active;
	}

	public void setActive(boolean active) {
		_active = active;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Account toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Account)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		AccountImpl accountImpl = new AccountImpl();

		accountImpl.setAccount_id(getAccount_id());
		accountImpl.setCompany_Id(getCompany_Id());
		accountImpl.setName(getName());
		accountImpl.setFirst_name(getFirst_name());
		accountImpl.setLast_name(getLast_name());
		accountImpl.setDate(getDate());
		accountImpl.setActive(getActive());

		accountImpl.resetOriginalValues();

		return accountImpl;
	}

	public int compareTo(Account account) {
		int primaryKey = account.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Account account = null;

		try {
			account = (Account)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = account.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AccountModelImpl accountModelImpl = this;

		accountModelImpl._originalCompany_Id = accountModelImpl._company_Id;

		accountModelImpl._setOriginalCompany_Id = false;

		accountModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Account> toCacheModel() {
		AccountCacheModel accountCacheModel = new AccountCacheModel();

		accountCacheModel.account_id = getAccount_id();

		accountCacheModel.company_Id = getCompany_Id();

		accountCacheModel.name = getName();

		String name = accountCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			accountCacheModel.name = null;
		}

		accountCacheModel.first_name = getFirst_name();

		String first_name = accountCacheModel.first_name;

		if ((first_name != null) && (first_name.length() == 0)) {
			accountCacheModel.first_name = null;
		}

		accountCacheModel.last_name = getLast_name();

		String last_name = accountCacheModel.last_name;

		if ((last_name != null) && (last_name.length() == 0)) {
			accountCacheModel.last_name = null;
		}

		Date date = getDate();

		if (date != null) {
			accountCacheModel.date = date.getTime();
		}
		else {
			accountCacheModel.date = Long.MIN_VALUE;
		}

		accountCacheModel.active = getActive();

		return accountCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{account_id=");
		sb.append(getAccount_id());
		sb.append(", company_Id=");
		sb.append(getCompany_Id());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", first_name=");
		sb.append(getFirst_name());
		sb.append(", last_name=");
		sb.append(getLast_name());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", active=");
		sb.append(getActive());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.openfeed.collectone.model.Account");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>account_id</column-name><column-value><![CDATA[");
		sb.append(getAccount_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>company_Id</column-name><column-value><![CDATA[");
		sb.append(getCompany_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>first_name</column-name><column-value><![CDATA[");
		sb.append(getFirst_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>last_name</column-name><column-value><![CDATA[");
		sb.append(getLast_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Account.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Account.class
		};
	private int _account_id;
	private int _company_Id;
	private int _originalCompany_Id;
	private boolean _setOriginalCompany_Id;
	private String _name;
	private String _first_name;
	private String _last_name;
	private Date _date;
	private boolean _active;
	private long _columnBitmask;
	private Account _escapedModelProxy;
}